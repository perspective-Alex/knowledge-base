А.А. Миронова
МЕТОДЫ ВИЗУАЛИЗАЦИИ ОНТОЛОГИЙ
г. Магнитогорск, ГОУ ВПО «Магнитогорский государственный уни-
верситет»
На сегодняшний момент успешность организации напрямую связана
с тем, насколько эффективно она использует доступную ей информацию.
При этом её информационные потребности сводятся к хранению уже не
данных, а знаний. Это значит, что структура представления информации
требует тщательного пересмотра; иными словами, в настоящий момент
происходит смена парадигм в области представления и поиска информа-
ции; по её окончании пользователи получат новый инструмент, в роли ко-
торого, очевидно, выступит семантическая сеть.
Семантическая сеть – расширение существующей Всемирной паути-
ны, основанное на идее об обмене информацией с явными, формальными
и доступными для машин описаниями знаний. Обеспечение информации
такими семантиками приведет к созданию приложений, которые увеличат
понимание того, что содержится в обработанной информации [6]. Этот
потенциал необходим для улучшения методов работы с информацией в
самом широком смысле: например, эффективные поисковые машины, мо-
бильные агенты для решения различных задач, и т.д. Узлами семантиче-
ской сети являются онтологии – механизмы представления формального и
общего описание области. По своей природе онтология не может бытьпростой, сеть онтологий достаточно сложна для человеческого воспри-
ятия. По этой причине для работы с онтологиями целесообразно задейст-
вовать методы и технологии визуализации.
Визуализация онтологий не может быть простой задачей. При созда-
нии инструментов визуализации важно, чтобы они не только помогали
эффективно отображать всю информацию, но, в тоже время, позволяли
пользователю легко выполнять различные операции над онтологиями. В
области визуализации онтологий есть несколько работ, главным образом,
в области представления онтологий в двухмерном пространстве. Разуме-
ется, этим методы визуализации не исчерпываются.
Цель настоящей статьи заключается в том, чтобы рассмотреть суще-
ствующие методы и технологии визуализации онтологий и подобных
структур (графов, деревьев и т.п.). Такой краткий обзор методов может
быть полезен для выбора метода визуализации для решения задач кон-
кретной предметной области, с учётом функциональных (например, нави-
гационные способности) и нефункциональных (например, размер онтоло-
гии) требований.
1. ПОНЯТИЕ ОНТОЛОГИИ
Понятие онтологии [11], заимствованное из философии, сейчас ак-
тивно применяется в искусственном интеллекте и информатике. В фило-
софии онтология изучает категории бытия, которые существуют или могут
существовать. В искусственном интеллекте онтологии упоминаются в кон-
тексте с такими понятиями как концептуализация, знание, представление
знаний, системы, основанные на знаниях. Одни учёные пытаются дать
неформальные определения, другие описывают онтологии на основе по-
нятий и конструкций логики и математики. Но, несмотря на то, что по-
строено множество различных онтологий и увеличивается область ихприменения, до сих пор нет точного определения этого понятия примени-
тельно к области искусственного интеллекта.
Самым распространенным на данный момент является определение
T. Gruber, согласно которому онтология является точной спецификацией
концептуализации. С этой точки зрения каждая база знаний, экспертная
система, или агент знаний фиксируется явно или неявно некоторой кон-
цептуализацией. Множество объектов и отношения между ними отража-
ются в словаре, в котором экспертная система представляет свои знания.
Таким образом, считается, что основу онтологии составляют множества
представленных в ней терминов.
M. Ushold также считает, что онтология является спецификацией
концептуализации, но только в той ее части, которая зависит от опреде-
ленной области интересов. Независимо от вида онтологии в нее необхо-
димо включить словарь терминов и некоторые спецификации их значений,
что позволяет ограничивать возможные интерпретации терминов и отра-
жать взаимодействие понятий, включенных в структуру данной области.
Заметим, что при таком подходе понятие онтологии сильно пересекается с
уже давно принятым в информатике и лингвистике понятием тезауруса.
H. Takeda ставит онтологии в центр проблемы организации знаний,
так как в каждой области могут существовать различные понимания од-
них и тех же терминов. В этом случае онтология используется для струк-
турирования информации, являясь посредником между человеко- и ма-
шинно-ориентированным уровнем представления информации. Здесь он-
тология определяется как соглашение о некоторой области интересов для
достижения определенных целей.
Неформально, онтология представляет собой некоторое описание
взгляда на мир применительно к конкретной области интересов. Это опи-
сание состоит из терминов и правил использования этих терминов, огра-ничивающих их значения в рамках конкретной области. На формальном
уровне, онтология - это система, состоящая из набора понятий и набора
утверждений об этих понятиях, на основе которых можно строить классы,
объекты, отношения, функции и теории. Онтология, как пример общего
соглашения о семантике области, способствует установлению корректных
связей между значениями элементов области, тем самым, создавая усло-
вия для их совместного использования. Онтологии можно применять в ка-
честве строительных блоков компонентов баз знаний, схемы объектов в
объектно-ориентированных системах, концептуальной схемы баз данных,
структурированного глоссария взаимодействующих сообществ, словаря
для связи между агентами, определения классов для программных систем.
2. МЕТОДЫ ВИЗУАЛИЗАЦИИ ОНТОЛОГИЙ
Методы визуализации онтологий могут быть сгруппированы различ-
ными способами: по способу представления, размерности изображения,
способа взаимодействия с пользователем. По типам, методы могут быть
разбиты на следующие группы [5]:
1) Иерархический список;
2) Узлы-связи и деревья;
3) Масштабируемые;
4) Заполнение пространства;
5) Фокусирование и искажение;
6) Трёхмерные ландшафты.
Методы, попавшие в одну из категорий, могут содержать в себе чер-
ты другой. Дополнительно методы в каждой группе разбиты на двух- и
трехмерные. Двухмерные методы используют поверхность экрана как
плоскость без каких-либо элементов глубины. Трехмерные методы вводят
еще одно измерение для того, чтобы приблизиться к представлению ре-
ального мира или улучшить взаимодействие с пользователем. Также неко-торые трехмерные методы позволяют пользователю передвигать и вра-
щать объекты в виртуальном мире и/или перемещаться в нём.
Иерархический список
Многие инструменты визуализации онтологий, в том числе Protege
[1], OntoEdit [2], Kaon [3] и некоторые другие, предлагают в качестве ос-
новного способа визуализации представления в стиле Windows Explorer.
При этом таксономия онтологии представляется как дерево.
Узлы-связи и деревья
Методы этой категории отображают онтологию как набор соеди-
няющихся узлов, представляющих онтологию. Пользователю обычно
предоставляется возможность разворачивать и сворачивать узлы и
поддеревья для управления детализацией информации.
Двумерные
OntoViz [4] – плагин визуализации для Protege, использует библио-
теку GraphViz для создания простого представления онтологии в виде
двумерного графа. Есть возможность для каждого класса отображать имя,
свойства, наследование и роли. Случаи могут быть показаны разными
цветами.
IzaVis [7] – визуальная среда для создания и редактирования rdf-
онтологий в форме направленных графов. Графы визуализируются с по-
мощью эллипсов, прямоугольников и рёбер между ними. Узлами являются
классы, индивиды и значения свойств, свойства представляются как рёбра
графа.
SpaceTree [8] – визуализатор деревьев, выполненный на основе диа-
грамм узел-связь с использованием сворачивания узлов, которые не могут
быть отображены. В данной реализации свёрнутые узлы представляются
специальными иконками, затенение которых пропорционально количеству
свёрнутых узлов, а ширина – глубине скрываемого поддерева.OntoTrack [Liebig и Noppens, 2004] – инструмент «в одном пред-
ставлении» для просмотра и редактирования онтологий с иерархическим
расположением. Данный метод напоминает визуализацию SpaceTree, по-
скольку представляет, отход от иерархий с треугольниками ширины, дли-
ны и штриховки, которая приближает глубину, ветви и число подклассов.
GoSurfer [GoSurfer] – инструмент визуализации для поиска данных,
связанный с определенными генами Go, как входными данными. Исполь-
зуется принцип визуализации дерева сверху вниз и инструменты для того,
чтобы сравнить гены относительно их соответствующих сроков в онтоло-
гии Go, то есть, сравнение путей онтологии.
Трехмерные
OntoSphere [9]. Предлагает визуализацию типа узел-связь, и исполь-
зует три различных представления онтологии для представления пользо-
вателю обзора или деталей, в зависимости от его потребностей. Корневая
сцена представляет сферу с расположенными на её поверхности классами
верхнего уровня, представляемых как малые сферы. Она визуализирует не
таксономию, а ролевые отношения между классами. Цвет и размер ис-
пользуются для выделения поддеревьев и их размера. Сцена дерева ото-
бражается по левому щелчку на классе и показывает класс и его поддере-
во.
Масштабируемые
Grokker – система для отображения карт знаний. Она предлагает
графическое представление для информации типа результатов web-поиска
или файлового поиска. Механизм кластеризации показывает документы
как наборы вложенных диаграмм Вена. Пользователь может перемещаться
по иерархии простыми кликами на круге. Когда круг выделен он увеличи-
вается, делая своё содержание видимым. Круги заполнены цветом, под-
сказывающим, что они находятся на нижних уровнях иерархии. На ниж-них уровнях иерархии пользователь может выбирать документы для про-
смотра в большом окне.
Jambalaya [10] – плагин визуализации для Protege, использующий
SHriMP(Simple Hierarcical Multi-Perspective). SHriMP использует вложен-
ный просмотр графа и концепцию вложенных перемещаемых представле-
ний.
CropCircles. Визуализация, представляющая дерево иерархии клас-
сов в виде набора окружностей. Узлам выделяется соответсвующее место
для того, чтобы обеспечить размещение всех поддеревьев. Единственный
потомок помещается как концентричекий круг в своего родителя, не-
сколько потомков помещаются в родителя от больших к меньшим.
Пользователь может щелчком по окружности выделить её и просмотреть
список непосредсвенных потомков соответсвующего узла.
Заполнение пространства
TreeMaps. Использует 2-х мерный подход к заполнению простран-
ства для представления иерархий, с помощью прямоугольной области с
прямоугольным
разбиением.
Размер
и
цвет
используются
для
представления данных. Пользователь может более детально просмотреть
интересующую его область двойным щелчком, при этом она увеличится
до размера всего окна.
Information Slices. Использует один или несколько дисков для ком-
пактного двумерного представления иерархий. Каждый диск представляет
многое уровни иерархии, обычно на каждом диске размещается 5–10
уровней иерархии.
SequoiaView визуализирует деревья подобно TreeMaps. Происходит
объединение Treemaps (заштрихованная область) с Squarified Treemaps,
который использует прямоугольники с меньшим форматом изображения.
Фокусирование и искажениеДвумерные
TGVizTab. Встраивает визуализацию Touchgraph в Protege. Touch-
graph – это среда с открытым исходным кодом для создания и просмотра
графов. Она размещает семантически схожие узлы рядом. Это визуализа-
ция позволяет пользователю выполнять навигацию постепенно делая ви-
димыми разные части графа. Также возможно сворачивать и разворачи-
вать узлы. Кроме того пользователь имеет полный контроль над цветом и
видимостью отдельных типов связей, может менять степень увеличения
или делать граф гиперболическим.
MoireGraphs [Jankun и Кван, 2003] – визуализация объединения то-
пологии графа. Центр поддержек и контекст с рядом методов взаимодей-
ствия для исследования графа, имея визуальное содержание, (например,
изображения, документы и т.д). Эта техника использует радиальные гра-
фы. В этих графах сосредоточенный узел появляется в центре, в то время
как узлы, связанные с этим, помещены вокруг него. Каждый следующий
уровень узлов отдален от центрального, соответствуя внешнему концен-
трическому кругу.
Трехмерные
3D Hyperbolyc Tree. Было создано для визуализации web-сайтов, но
использовалось как файловый браузер. Он представляет дерево в гипер-
болическом пространстве для достижения большей плотности отображае-
мых данных. Узлы дерева размещаются на поверхности сферы.
Информационные ландшафты
File system navigator. Создавался как трёхмерный файловый обо-
зреватель для UNIX-систем. Высота узлов на плоскости представляет
количество содержащихся в них файлов. При взгляде сверху узлы
образуют
двухмерное
дерево,
представляющее
иерархию
файловой
системы. Выбор узла подсвечивает его, а двойной щелчок открывает егоподсвечивает его, а двойной щелчок открывает его для детального про-
смотра.
Harmony Information Landscape. Был разработан для гипертекста и
упорядочивает узлы, представляемые как трёхмерные объекты, непосред-
ственно на плоскости. Объекты при этом отличаются цветом и размером в
зависимости от содержимого. Кроме того, так как документы гипертек-
стовые, между ними также отображаются связи. В случае с онтологией
аналогично могут визуализироваться роли.
3. ЗАКЛЮЧЕНИЕ
Таким образом, в настоящее время существует множество методов и
инструментов визуализации онтологий. В основном это методы в области
графов, визуализации иерархии, а также в двумерном и трехмерном про-
странстве. Выбор какого-то конкретного метода визуализации для данной
предметной области является специфическим и должен иметь свои осо-
бенности.
Не существует одного определенного метода, который соответство-
вал бы приложению. Следовательно, жизнеспособное решение состоит в
том, чтобы предоставить пользователю несколько визуализации, таким
образом, чтобы он в состоянии мог выбрать тот, который является соот-
ветствующим для его текущих потребностей. Некоторые инструменты
управления онтологией уже обеспечивают комбинации методов визуали-
зации. Например, Protégé, который включает несколько плагинов визуали-
зации.
Список литературы.
[1]
Protégé is a free, open source ontology editor and knowledge-base
framework. DOI= http://protege.stanford.edu/[2]
The
OTK
Tool
Repository.
DOI=
http://www.ontoknowledge.org/tools/ontoedit.shtml
[3]
The KArlsuhe Ontology and Semantic Web tool suite. DOI=
http://kaon.semanticweb.org/
[4]
OntoVis
–
Protégé
Wiki. DOI=
A DOI=
http://protegewiki.stanford.edu/index.php/OntoViz
[5]
Ontology
Visualization
Methods
–
Survey.
http://ontologynavigator.paris-
sor-
bonne.fr/docOntology/Ontology%20Visualization%20Method%20A%20Surv
ey.pdf
[6]
Ontology-based
Information
Visualisation.
DOI=
http://cciweb.uncc.edu/~ras/RS/OBIV.pdf
[7] IzaVis Overview. DOI= http://www.w3.org/2001/11/IsaViz/
[8] SpaceTree:
a
novel
node-link
tree
browser.
DOI=
http://www.cs.umd.edu/hcil/spacetree/
[9]
Ontosphere 3d. DOI = http://ontosphere3d.sourceforge.net/
[10] Jambalaya
–
Protégé
wiki.
DOI
=
http://protegewiki.stanford.edu/index.php/Jambalaya
[11] Организация
эффективного поиска на основе онтологий. DOI =
http://www.dialog-21.ru/materials/archive.asp?id=7029&y=2001&vol=6078
